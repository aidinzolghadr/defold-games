local data = require "main.data"

local TIME = 5
local SPEED = 15

function init(self)
	self.time = TIME
	self.hp = 1
	self.hits = 0
	self.onfire = false

	repeat
		self.move = vmath.vector3(math.random(0, 10), math.random(-5, 5), 0)
		if self.move.x < 6 then
			self.move.x = self.move.x - 10
		end
	until vmath.length(self.move) > 0

	self.move = vmath.normalize(self.move) * SPEED
	
	local pos = go.get_position()
	pos.z = 0.1
	go.set_position(pos)
	msg.post("#fire", "disable")

	local anim = "e"..tostring(math.random(1,2))
	sprite.play_flipbook("#sprite", anim)
end

local function move(self, dt)
	local pos = go.get_position()
	go.set_position(pos + (self.move * dt))

	if self.move.x > 0 then
		sprite.set_hflip("#sprite", false)
	else
		sprite.set_hflip("#sprite", true)
	end
end

local function dead(self)
	msg.post("#co", "disable")
	sound.play("main:/sound#exp")
	sound.play("main:/sound#alien2")
	msg.post("/effect", "exp", {pos = go.get_position()})
	data.kills = data.kills + 1
	go.delete()
end

function update(self, dt)
	if data.state == data.STATE_PLAYING then
		if data.onscreen(go.get_position(), 4) then
			self.time = TIME
			move(self, dt)
		elseif self.time > 0 then
			self.time = self.time - dt
			if self.time < 0 then
				go.delete()
			end
		end

		if self.onfire then
			self.hp = self.hp - dt
			if self.hp <= 0 then
				dead(self)
			end
		end
	end
end

local function collision(self, message)
	if message.normal.x > 0.5 then
		self.move.x = math.abs(self.move.x)
	elseif message.normal.x < -0.5 then
		self.move.x = -math.abs(self.move.x)
	end

	if message.normal.y > 0.5 then
		self.move.y = math.abs(self.move.y)
	elseif message.normal.y < -0.5 then
		self.move.y = -math.abs(self.move.y)
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("contact_point_response") then
		if message.other_group == hash("flame") then
			self.hits = self.hits + 1
			if self.hits > 7 then
				self.onfire = true
				msg.post("#fire", "enable")
			end
		else
			collision(self, message)
		end
	end
end

