local data = require "main.data"

local function parse(self)
	sx, sy, w, h = tilemap.get_bounds("#tilemap")

	local r = 97
	if data.level % 3 == 2 then
		r = 101
	elseif data.level % 3 == 0 then
		r = 105
	end

	for y = 1, h+sy-1 do
		for x = sx, w+sx-1 do
			local t = tilemap.get_tile("#tilemap", "world", x, y)
			local s = tilemap.get_tile("#tilemap", "world", x, y-1)
			local pos = data.tile2world(vmath.vector3(x, y, 0.5))
			
			if t == 2 then
				tilemap.set_tile("#tilemap", "world", x, y, 0)
				msg.post("common/player", "position", {pos = pos})
			elseif t == 3 then
				tilemap.set_tile("#tilemap", "world", x, y, math.random(r, r+2))
				if s == 0 then
					tilemap.set_tile("#tilemap", "world", x, y-1, 5)
				end
			elseif t == 4 then
				data.gemstot = data.gemstot + 1
				tilemap.set_tile("#tilemap", "world", x, y, 0)
				factory.create("#gem-factory", pos)
			elseif t >= 7 and t <= 9 then
				tilemap.set_tile("#tilemap", "world", x, y, 0)
				factory.create("#door-factory", pos + vmath.vector3(0,12,-1), nil, {id = t - 6})
			elseif t >= 10 and t <= 12 then
				tilemap.set_tile("#tilemap", "world", x, y, 0)
				factory.create("#button-factory", pos + vmath.vector3(0,20,0), nil, {id = t - 9})
			elseif t == 22 then
				tilemap.set_tile("#tilemap", "world", x, y, 0)
				factory.create("#rsj-factory", pos, nil, {horz = false})
			elseif t == 23 then
				tilemap.set_tile("#tilemap", "world", x, y, 0)
				factory.create("#rsj-factory", pos, nil, {horz = true})
			elseif t == 24 then
				tilemap.set_tile("#tilemap", "world", x, y, 0)
				factory.create("#exit-factory", pos)
			end
		end
	end
end

function init(self)
	data.gems = 0
	data.gemstot = 0
	data.his = {}
	data.trig = {0, 0, 0}
	data.state = data.STATE_PLAYING
	parse(self)
end
