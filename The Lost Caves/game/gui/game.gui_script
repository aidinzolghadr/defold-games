local data = require "main.data"

local function disablenode(self, node)
	gui.set_enabled(node, false)
end

function init(self)
	local node = gui.get_node("mid")
	local text = "CAVE "..tostring(data.level)
	gui.set_text(node, text)
	gui.set_text(gui.get_node("mid1"), text)
	gui.animate(node, "color.w", 1, gui.EASING_LINEAR, 2, 0, disablenode)
	gui.set_enabled(gui.get_node("status"), false)
	gui.set_enabled(gui.get_node("boss-bar"), false)
end

function update(self, dt)
	for b = 1, data.bombs do
		local node = gui.get_node(string.format("%d", b))
		gui.play_flipbook(node, "bomb-icon")
	end

	for b = data.bombs+1, 3 do
		local node = gui.get_node(string.format("%d", b))
		gui.play_flipbook(node, "bomb-empty")
	end

	gui.set_text(gui.get_node("score"), string.format("%05d", data.score))
end

function on_message(self, message_id, message, sender)
	if message_id == hash("status") then
		local node = gui.get_node("status")
		gui.set_text(node, message.text)
		gui.set_text(gui.get_node("status1"), message.text)
		gui.set_enabled(node, true)
		gui.animate(node, "color.w", 1, gui.EASING_LINEAR, 2, 0, disablenode)
	elseif message_id == hash("boss") then
		gui.set_enabled(gui.get_node("boss-bar"), message.enable)
	elseif message_id == hash("boss-hp") then
		gui.set_scale(gui.get_node("boss"), vmath.vector3(message.hp / 100, 1, 1))
	end
end

