local data = require "main.data"

local THROW = 2000

go.property("move", vmath.vector3())

function init(self)
	self.move.y = 0.5
	self.other = nil
	msg.post("#co-blast", "disable")
	msg.post("#co", "apply_force", {force = self.move * THROW, position = go.get_world_position()})
	msg.post("#sprite", "play_animation", {id = hash("bomb")})
	sound.play("main:/sound#tick")
end

local function complete(self)
	if self.other then
		sound.play("main:/sound#warp2")
		msg.post("/common/effect", "explode", {pos = self.other})
	end
	go.delete()
end

local function checktile(self, pos)
	pos = data.world2tile(pos)
	local t = tilemap.get_tile("/level#tilemap", "world", pos.x, pos.y)
	if t == 60 then
		tilemap.set_tile("/level#tilemap", "world", pos.x, pos.y, 0)
	end
end

local function explode(self)
	sound.play("main:/sound#explode")
	msg.post("/common/effect", "explode", {pos = go.get_position()})
	msg.post("#co-blast", "enable")
	msg.post("#sprite", "disable")
	go.animate(".", "position", go.PLAYBACK_ONCE_FORWARD, go.get_position(), go.EASING_LINEAR, 0.1, 0, complete)

	local pos = go.get_position()
	checktile(self, pos + vmath.vector3(12,0,0))
	checktile(self, pos + vmath.vector3(-12,0,0))
	checktile(self, pos + vmath.vector3(0,-12,0))
end

function on_message(self, message_id, message, sender)
	if message_id == hash("animation_done") then
		explode(self)
	elseif message_id == hash("trigger_response") then
		if message.other_group == hash("enemy") then
			go.delete(message.other_id)
			self.other = go.get_position(message.other_id)
			data.score = data.score + 250
		else
			msg.post(message.other_id, "hit")
		end
	end
end

